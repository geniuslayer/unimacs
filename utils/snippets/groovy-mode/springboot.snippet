# -*- mode: snippet -*-
# name: build.gradle for springboot
# key: springboot
# --
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${1:1.5.3.RELEASE}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

jar {
    baseName = '${2:`(file-name-base (directory-file-name (file-name-directory (buffer-file-name))))`}'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = ${3:1.8}
targetCompatibility = $3

dependencies {
    compile("org.springframework.boot:spring-boot-starter${4:-web}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
`(let ((package-name (file-name-base (directory-file-name (file-name-directory (buffer-file-name))))))
  (f-mkdir "src")
  (f-mkdir "src/main")
  (f-mkdir "src/main/java")
  (f-mkdir (concat "src/main/java/" package-name))
  (f-mkdir "src/test")
  (f-mkdir "src/test/java")
  (f-mkdir (concat "src/test/java/" package-name))
  (f-mkdir "src/main/resources")
  (f-mkdir "src/main/resources/templates")
  (f-mkdir "src/main/resources/static")
  (f-touch "src/main/resources/applicantion.properties")
  (with-temp-file (concat "src/main/java/" package-name "/Application.java")
    (insert "package " package-name ";\n\n")
    (insert "import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class Application {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }
}")))`
